<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Try to sneakily load the license

self.ev_license = chrome_license_load(false);
self.license_info = "Loading license info...";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if chrome_has_result(self.ev_license)
{
    var error = chrome_get_result(self.ev_license, "error");
    if error != ""
    {
        if self.interactive
        {
            // If we are interactive, then the user should have been asked
            // for permission - if that fails we know for sure something has
            // gone wrong.
            self.error = error;
        }
        else
        {
            // If we aren't interactive then the error is likely that we
            // just need to ask the user for permission. Because that isn't
            // really an error, we just say we need users permission.
            self.license_info = "You must give the app permission to check for payment.";
        }
    }
    else
    {
        // Nothing went wrong, we got license info
        var access_level = chrome_get_result(self.ev_license,"accessLevel");
        var created_time = chrome_get_result(self.ev_license,"createdTime");
        var created_time_str = "";
        if not is_undefined(created_time)
        {
            created_time_str = date_datetime_string(created_time);
        }
        switch (access_level)
        {
            case cpa_license_none:
                self.license_info = "No license";
            case cpa_license_free_trial:
                self.license_info = "Free trial since "+created_time_str; break;
            case cpa_license_full:
                self.license_info = "Paid version since "+created_time_str; break;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the license info

draw_set_font(fRegular);
draw_set_color(NEAR_BLACK);
draw_set_halign(fa_left);
draw_set_valign(fa_top);

var xx = x - 128;
draw_text_ext(xx,y,"License info: "+self.license_info,-1,256);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
